worker_processes ENV['COUNT'] || <%= fetch(:unicorn_concurrency) %>
timeout ENV['TIMEOUT'] || 30

working_directory "<%= current_path %>"
listen "<%= fetch(:unicorn_socket) %>", backlog: 2048
pid "<%= fetch(:unicorn_pidfile) %>"

stderr_path "<%= fetch(:logs_path) %>/unicorn.stderr.log"
stdout_path "<%= fetch(:logs_path) %>/unicorn.stdout.log"

preload_app true

GC.respond_to?(:copy_on_write_friendly=) && GC.copy_on_write_friendly = true

before_exec do |server|
  ENV["BUNDLE_GEMFILE"] = "<%= "#{current_path}/Gemfile" %>"
end

before_fork do |server, worker|
  ActiveRecord::Base.connection.disconnect!

  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end

  sleep 1
end

after_fork do |server, worker|
  ActiveRecord::Base.establish_connection

  child_pid = server.config[:pid].sub('.pid', ".#{worker.nr}.pid")
  system("echo #{Process.pid} > #{child_pid}")
end
